<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.itemList.mapper.ItemMapper">
    
    <resultMap type="Item" id="ItemResult">
        <result property="iId"    column="iId"    />
        <result property="sId"    column="sId"    />
        <result property="photo"    column="photo"    />
        <result property="itemName"    column="itemName"    />
        <result property="price"    column="price"    />
        <result property="amount"    column="amount"    />
    </resultMap>

    <sql id="selectItemVo">
        select iId, sId, photo, itemName, price, amount from item
    </sql>

    <select id="selectItemList" parameterType="Item" resultMap="ItemResult">
        <include refid="selectItemVo"/>
        <where>  
            <if test="iId != null "> and iId = #{iId}</if>
            <if test="sId != null "> and sId = #{sId}</if>
            <if test="photo != null  and photo != ''"> and photo = #{photo}</if>
            <if test="itemName != null  and itemName != ''"> and itemName like concat('%', #{itemName}, '%')</if>
            <if test="price != null "> and price = #{price}</if>
            <if test="amount != null "> and amount = #{amount}</if>
        </where>
    </select>
    
    <select id="selectItemByIId" parameterType="Long" resultMap="ItemResult">
        <include refid="selectItemVo"/>
        where iId = #{iId}
    </select>
        
    <insert id="insertItem" parameterType="Item" useGeneratedKeys="true" keyProperty="iId">
        insert into item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sId != null">sId,</if>
            <if test="photo != null">photo,</if>
            <if test="itemName != null">itemName,</if>
            <if test="price != null">price,</if>
            <if test="amount != null">amount,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sId != null">#{sId},</if>
            <if test="photo != null">#{photo},</if>
            <if test="itemName != null">#{itemName},</if>
            <if test="price != null">#{price},</if>
            <if test="amount != null">#{amount},</if>
         </trim>
    </insert>

    <update id="updateItem" parameterType="Item">
        update item
        <trim prefix="SET" suffixOverrides=",">
            <if test="sId != null">sId = #{sId},</if>
            <if test="photo != null">photo = #{photo},</if>
            <if test="itemName != null">itemName = #{itemName},</if>
            <if test="price != null">price = #{price},</if>
            <if test="amount != null">amount = #{amount},</if>
        </trim>
        where iId = #{iId}
    </update>

    <delete id="deleteItemByIId" parameterType="Long">
        delete from item where iId = #{iId}
    </delete>

    <delete id="deleteItemByIIds" parameterType="String">
        delete from item where iId in 
        <foreach item="iId" collection="array" open="(" separator="," close=")">
            #{iId}
        </foreach>
    </delete>
</mapper>